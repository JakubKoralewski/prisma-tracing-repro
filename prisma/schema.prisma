// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["tracing"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String  @id @default(cuid())
  displayName  String   @unique @db.VarChar(255)
  posts     Post[]

  emailVerified DateTime? @map("email_verified")
  image         String?  @db.VarChar(255)
  accounts      Account[]
  sessions      Session[]

  @@map("users")
}


model Post {
  id            String  @id @default(cuid())
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        String
  title         String   @db.VarChar(255)
  body          String   @db.LongText
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  voteCount     Int     @default(0)
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String  @db.VarChar(255)
  provider           String  @db.VarChar(255)
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String? @db.VarChar(255)
  scope              String? @db.VarChar(255)
  id_token           String? @db.Text
  session_state      String? @db.VarChar(255)

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String   @db.VarChar(255)
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}
